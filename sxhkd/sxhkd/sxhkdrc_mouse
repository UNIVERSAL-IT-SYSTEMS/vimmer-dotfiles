# vim:foldlevel=0
# vim:foldmethod=marker

# bspwm hotkeys {{{1

# restart bspwm
super + alt + Escape
	pkill -x panel; \
    bspc quit;

# close window
super + w
	bspc window -c

# toggle tiling | monocle
super + t
	bspc desktop -l next

# balance size of windows
super + b
	bspc desktop -B

# toggle floating and fullscreen
super + {s,f}
	bspc window -t {floating,fullscreen}

# toggle last window with ` and last desktop with Tab
super + {grave,Tab}
	bspc {window,desktop} -f last

# swap window with last selected
super + apostrophe
	bspc window -s last

# switch desktop's windows
super + {_,shift + }c
	bspc window -f {next,prev}

# focus/move window
super + {_,shift + }{h,j,k,l}
    bspc window -{f,s} {left,down,up,right}

# show desktop, send window to desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,window -d} ^{1-9,10}

# jump throught window selection history
super + {o,i}
	bspc control --record-history off; \
	bspc window {older,newer} -f; \
	bspc control --record-history on

# transplant selected window to the given window
super + y
	bspc window -w last

# make window biggest
super + ctrl + m
	bspc window -s biggest

# preselect split ratio side
super + ctrl + {h,j,k,l}
	bspc window -p {left,down,up,right}

# change select ratio
super + ctrl + {1-9}
	bspc window -r 0.{1-9}

# cancel selection
super + ctrl + {_,shift + }space
	bspc {window -p cancel,desktop -c}

# resize tiled windows
super + alt + {h,j,k,l}
	bspc window -e {left -10,down +10,up -10,right +10}

# resize another side
super + alt + shift + {h,j,k,l}
	bspc window -e {right -10,up +10,down -10,left +10}

# reducing gap on the fly 
super + {minus,equal}
    bspc config -d focused window_gap $((`bspc config -d focused window_gap` {+,-} 2 ))

# switch gap tiny | wide
super + alt + {8,9}
    bspc config -d focused window_gap {1, 40}

# make window sticky
super + e
    bspc window -t sticky

# preventing closing 
super + r
    bspc window -t locked

# hide all windows on all desktops
super + z
    bspc control --toggle-visibility 

# move floating windows (requires baskerville's xdo)
super + {Left,Right,Up,Down}
    xdo move {-x -20,-x +20,-y -20,-y +20}

# resize floating windows
super + shift + {Left,Right,Up,Down}
    xdo resize {-w -20,-w +20,-h -20,-h +20}    
    
# change desktop padding {{{2
super + {_, shift} + bracketright
	bspc config -d focused right_padding $((`bspc config -d focused right_padding` {+,-} 20 ))

super + {_, shift} + bracketleft
	bspc config -d focused left_padding $((`bspc config -d focused left_padding` {+,-} 20 ))

super + ctrl + {_, shift} + bracketright
	bspc config -d focused bottom_padding $((`bspc config -d focused bottom_padding` {+,-} 20 ))

super + ctrl + {_, shift} + bracketleft
	bspc config -d focused top_padding $((`bspc config -d focused top_padding` {+,-} 20 ))

super + alt + {minus, equal}
	bspc config -d focused right_padding $((`bspc config -d focused right_padding` {+,-} 20 )); \
	bspc config -d focused left_padding $((`bspc config -d focused left_padding` {+,-} 20 )); \
	bspc config -d focused bottom_padding $((`bspc config -d focused bottom_padding` {+,-} 20 )); \
	bspc config -d focused top_padding $((`bspc config -d focused top_padding` {+,-} 20 ));
# }}}

# center floating window
super + alt + c
    IFS=' ' read sw sh < <(xdotool getdisplaygeometry); \
    eval `xdotool getactivewindow getwindowgeometry --shell`; \
    xdotool getactivewindow windowmove $(($sw/2-$WIDTH/2)) $(($sh/2-$HEIGHT/2));
    
# mouse {{{2
#

~button1
	bspc pointer -g focus

super + button{1-3}
	bspc pointer -g {move,resize_side,resize_corner}

super + !button{1-3}
	bspc pointer -t %i %i

super + @button{1-3}
	bspc pointer -u

#
# monitor {{{1

# switch to next monitor
super + n
	bspc monitor -f next

# move current window to next monitor
super + shift + n
	bspc window -m next

# move current window to monitor
super + alt + {1-9}
    bspc window -m {1-9}

# move current desktop to monitor
super + shift + alt + {1-9}
    bspc desktop -m {1-9}

# mpd {{{1

ctrl + alt + s
    mpc stop

ctrl + alt + c
    mpc toggle

ctrl + alt + z
    mpc prev

ctrl + alt + n
    mpc next

# aijmixer {{{1

XF86Audio{Raise,Lower}Volume
    amixer sset Master {5%+,5%-} unmute

# xbacklight {{{1

XF86MonBrightness{Up,Down}
    xbacklight -{inc,dec} 10

# xdotool {{{1

# move mouse cursor
{h,j,k,l}
    xdotool mousemove_relative {-- -8 0, 0 8, -- 0 -8, 8 0}

# move mouse cursor with extra jump size
shift + {h,j,k,l}
    xdotool mousemove_relative {-- -48 0, 0 48, -- 0 -48, 48 0}

# move mouse cursor with super extra jump size
shift + alt + {h,j,k,l}
    xdotool mousemove_relative {-- -248 0, 0 248, -- 0 -248, 248 0}

# emulate mouse click
shift + i
    xdotool click 1 --delay 300

# emulate mouse scroll down
ctrl + d
    xdotool click --clearmodifiers 5

# emulate mouse scroll up
ctrl + u
    xdotool click --clearmodifiers 4

# toggle `super + {h,j,k,l}` mode. 
i
    inputmode.sh t I &

super + u
    inputmode.sh t N &
 
super + m
    inputmode.sh t M &
 
# misc {{{1
 
# copy buffer to clipboard
ctrl + shift + c
    xclip -o -sel clipboard | xclip -i

# lock screen
ctrl + alt + l
    xlock

# make sxhkd reload its configuration files:
super + Escape
	pkill -x sxhkd; sxhkd &;

# open urxvt terminal
super + Return
	urxvt

# run menu
super + space
	dmenu_run

# start terminal with ncmpcpp
super + shift + m
    bspc rule -a urxvt -o floating=on; \
    urxvt -geometry 130x40 -e ncmpcpp &;

# start terminal with elinks
super + shift + b
    OLDTMUX="$TMUX"; \
    unset TMUX; \
    urxvt -geometry 120x45 -e tmux new-session -A -s elinks 'elinks' \; split-window -h \; select-pane -t 0 \; resize-pane -L 10 \; send-keys -t right "c" C-m
    export TMUX="$OLDTMUX";

# start terminal with weechat
super + shift + o
    bspc rule -a urxvt -o floating=on; \
    OLDTMUX="$TMUX"; \
    unset TMUX; \
    urxvt -geometry 150x40 -e tmux new-session -A -s weechat 'weechat' \; new-window -d -n skyped 'skyped -n -d'; \
    export TMUX="$OLDTMUX";
